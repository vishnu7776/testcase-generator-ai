{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/testcase-generator-ai/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAGxB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/testcase-generator-ai/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///home/user/testcase-generator-ai/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///home/user/testcase-generator-ai/src/components/ui/accordion.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,YAAY,wKAAA,CAAA,OAAuB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG;AAE5B,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,SAAyB;QAAC,WAAU;kBACnC,cAAA,6LAAC,wKAAA,CAAA,UAA0B;YACzB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gIACA;YAED,GAAG,KAAK;;gBAER;8BACD,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW;AAErE,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,UAA0B;QACzB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;kBAET,cAAA,6LAAC;YAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;sBAAa;;;;;;;;;;;;AAIjD,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 389, "column": 0}, "map": {"version":3,"sources":["file:///home/user/testcase-generator-ai/src/app/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport {\n  LayoutGrid,\n  PlusCircle,\n  BarChart,\n  ClipboardList,\n  FlaskConical,\n  Zap,\n  Search,\n  Bell,\n  ChevronRight,\n  ArrowDown,\n  ArrowUp,\n  Bug,\n  FolderKanban,\n  Link as LinkIcon,\n} from 'lucide-react';\nimport {\n  Bar,\n  BarChart as RechartsBarChart,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Pie,\n  PieChart,\n  Cell,\n  Legend,\n  LineChart,\n  Line,\n  CartesianGrid,\n} from 'recharts';\nimport Link from 'next/link';\nimport { cn } from '@/lib/utils';\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from '@/components/ui/accordion';\n\nconst kpiData = [\n  {\n    title: 'Total Apps Used',\n    value: '4',\n    icon: Zap,\n    change: '0%',\n    changeType: 'neutral',\n    vsLastMonth: '4',\n  },\n  {\n    title: 'Total User Stories',\n    value: '128',\n    icon: ClipboardList,\n    change: '+12.5%',\n    changeType: 'increase',\n    vsLastMonth: '114',\n  },\n  {\n    title: 'Active Tests',\n    value: '7',\n    icon: BarChart,\n    change: '-14.3%',\n    changeType: 'decrease',\n    vsLastMonth: '8',\n  },\n  {\n    title: 'Testcases Passed',\n    value: '2,345',\n    icon: FlaskConical,\n    change: '+5.2%',\n    changeType: 'increase',\n    vsLastMonth: '2,229',\n  }\n];\n\nconst barChartData = [\n  { name: 'Clinical Trial App', passed: 315, failed: 51, pending: 88 },\n  { name: 'Patient Portal', passed: 265, failed: 39, pending: 71 },\n  { name: 'EHR System', passed: 450, failed: 25, pending: 40 },\n  { name: 'Telemedicine', passed: 180, failed: 15, pending: 30 },\n];\n\nconst defectTrendData = [\n  { date: '2024-07-01', opened: 10, closed: 8 },\n  { date: '2024-07-02', opened: 12, closed: 9 },\n  { date: '2024-07-03', opened: 8, closed: 10 },\n  { date: '2024-07-04', opened: 15, closed: 11 },\n  { date: '2024-07-05', opened: 9, closed: 12 },\n  { date: '2024-07-06', opened: 7, closed: 7 },\n  { date: '2024-07-07', opened: 11, closed: 13 },\n];\n\nconst testRunsByApp = [\n  {\n    appName: 'Clinical Trial App',\n    tests: [\n      {\n        id: 'TR-001',\n        userStoryId: 'US-401',\n        status: 'Running',\n        progress: 75,\n        jiraLink: 'https://jira.example.com/browse/CTA-123',\n      },\n      {\n        id: 'TR-006',\n        userStoryId: 'US-402',\n        status: 'Passed',\n        progress: 100,\n        jiraLink: 'https://jira.example.com/browse/CTA-120',\n      },\n    ],\n  },\n  {\n    appName: 'Patient Portal',\n    tests: [\n      { id: 'TR-002', userStoryId: 'US-512', status: 'Passed', progress: 100, jiraLink: null },\n    ],\n  },\n  {\n    appName: 'EHR System',\n    tests: [\n      {\n        id: 'TR-003',\n        userStoryId: 'US-603',\n        status: 'Failed',\n        progress: 100,\n        jiraLink: 'https://jira.example.com/browse/EHR-456',\n      },\n    ],\n  },\n  {\n    appName: 'Telemedicine Platform',\n    tests: [\n      {\n        id: 'TR-004',\n        userStoryId: 'US-721',\n        status: 'Passed',\n        progress: 100,\n        jiraLink: 'https://jira.example.com/browse/TP-789',\n      },\n    ],\n  },\n  {\n    appName: 'Pharmacy Management',\n    tests: [\n      { id: 'TR-005', userStoryId: 'US-815', status: 'Running', progress: 40, jiraLink: null },\n      { id: 'TR-007', userStoryId: 'US-816', status: 'Pending', progress: 0, jiraLink: null },\n    ],\n  },\n];\n\n\nconst GlassCard = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => (\n  <div\n    className={cn(\n      'group rounded-xl bg-gradient-to-br from-[var(--card-bg-start)] to-[var(--card-bg-end)] backdrop-blur-sm transition-all duration-300',\n      'shadow-[0_0_80px_0_var(--card-hover-glow)]',\n      'hover:bg-gradient-to-br hover:from-[var(--card-hover-bg-start)] hover:to-[var(--card-hover-bg-end)]',\n      'hover:shadow-[0_8px_40px_rgba(255,255,255,0.2)]',\n      className\n    )}\n  >\n    <div\n      className={cn(\n        'h-full w-full rounded-xl transition-all duration-300',\n        ''\n      )}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default function DashboardPage() {\n  const [isClient, setIsClient] = useState(false);\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  if (!isClient) {\n    return null;\n  }\n  return (\n    <div className=\"flex min-h-screen w-full flex-col bg-background\">\n      <div className=\"flex-1 p-4 sm:p-6 lg:p-8\">\n        <div className=\"flex items-center justify-between\">\n          <h1 className=\"text-2xl font-bold\">Dashboard</h1>\n          <div className=\"flex items-center gap-4\">\n            <Button variant=\"ghost\" size=\"icon\">\n              <Bell className=\"h-5 w-5\" />\n            </Button>\n            <Link href=\"/requirements\" passHref>\n              <Button>\n                <PlusCircle className=\"mr-2 h-4 w-4\" />\n                New Testcase Journey\n              </Button>\n            </Link>\n          </div>\n        </div>\n\n        <main className=\"mt-8 grid flex-1 items-start gap-8\">\n          <div className=\"grid gap-8 md:grid-cols-2 lg:grid-cols-4\">\n            {kpiData.map((kpi) => (\n              <GlassCard key={kpi.title}>\n                <Card className=\"bg-transparent border-0 h-full\">\n                  <CardContent className=\"p-4 space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"p-2 rounded-lg bg-primary/10\">\n                        <kpi.icon className=\"h-6 w-6 text-primary\" />\n                      </div>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\n                        <span>{kpi.title}</span>\n                        <ChevronRight className=\"h-4 w-4\" />\n                      </div>\n                      <div className=\"flex items-baseline gap-2\">\n                        <p className=\"text-3xl font-bold\">{kpi.value}</p>\n                        <p\n                          className={cn(\n                            'text-xs font-semibold flex items-center',\n                            kpi.changeType === 'increase' && 'text-green-500',\n                            kpi.changeType === 'decrease' && 'text-red-500',\n                            kpi.changeType === 'neutral' && 'text-muted-foreground'\n                          )}\n                        >\n                          {kpi.changeType === 'increase' && (\n                            <ArrowUp className=\"h-3 w-3 mr-1\" />\n                          )}\n                          {kpi.changeType === 'decrease' && (\n                            <ArrowDown className=\"h-3 w-3 mr-1\" />\n                          )}\n                          {kpi.change}\n                        </p>\n                      </div>\n                      <p className=\"text-xs text-muted-foreground\">\n                        vs last month: {kpi.vsLastMonth}\n                      </p>\n                    </div>\n                  </CardContent>\n                </Card>\n              </GlassCard>\n            ))}\n          </div>\n\n          <div className=\"grid gap-8 md:grid-cols-2 lg:grid-cols-7\">\n            <GlassCard className=\"lg:col-span-4 p-4 sm:p-6\">\n              <h3 className=\"text-lg font-semibold\">\n                App-wise Testcase Status\n              </h3>\n              <p className=\"text-sm text-muted-foreground mb-4\">\n                Total test cases by status for each application.\n              </p>\n              <div className=\"h-[300px]\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <RechartsBarChart data={barChartData}>\n                    <XAxis\n                      dataKey=\"name\"\n                      stroke=\"#888888\"\n                      fontSize={12}\n                      tickLine={false}\n                      axisLine={false}\n                    />\n                    <YAxis\n                      stroke=\"#888888\"\n                      fontSize={12}\n                      tickLine={false}\n                      axisLine={false}\n                    />\n                    <Tooltip\n                      cursor={{ fill: 'hsla(var(--primary), 0.1)' }}\n                      contentStyle={{\n                        backgroundColor: 'rgba(5, 5, 5, 0.8)',\n                        borderColor: 'hsl(var(--border))',\n                        borderRadius: '0.5rem',\n                      }}\n                    />\n                    <Legend wrapperStyle={{ fontSize: \"12px\" }} />\n                    <Bar\n                      dataKey=\"passed\"\n                      name=\"Passed\"\n                      stackId=\"a\"\n                      fill=\"#8BEA70\"\n                      radius={[0, 0, 0, 0]}\n                    />\n                    <Bar\n                      dataKey=\"failed\"\n                      name=\"Failed\"\n                      stackId=\"a\"\n                      fill=\"#B72B49\"\n                    />\n                    <Bar\n                      dataKey=\"pending\"\n                      name=\"Pending\"\n                      stackId=\"a\"\n                      fill=\"#f97316\"\n                      radius={[4, 4, 0, 0]}\n                    />\n                  </RechartsBarChart>\n                </ResponsiveContainer>\n              </div>\n            </GlassCard>\n\n            <GlassCard className=\"lg:col-span-3 p-4 sm:p-6\">\n              <h3 className=\"text-lg font-semibold\">Defect Trend</h3>\n              <p className=\"text-sm text-muted-foreground mb-4\">\n                Bugs opened vs. bugs closed daily.\n              </p>\n              <div className=\"h-[300px]\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart data={defectTrendData}>\n                    <CartesianGrid strokeDasharray=\"3 3\" strokeOpacity={0.2} />\n                    <XAxis\n                      dataKey=\"date\"\n                      stroke=\"#888888\"\n                      fontSize={12}\n                      tickLine={false}\n                      axisLine={false}\n                      tickFormatter={(value) => new Date(value).toLocaleDateString('en-US', { day: 'numeric', month: 'short' })}\n                    />\n                    <YAxis\n                      stroke=\"#888888\"\n                      fontSize={12}\n                      tickLine={false}\n                      axisLine={false}\n                    />\n                    <Tooltip\n                      cursor={{ fill: 'hsla(var(--primary), 0.1)' }}\n                      contentStyle={{\n                        backgroundColor: 'rgba(5, 5, 5, 0.8)',\n                        borderColor: 'hsl(var(--border))',\n                        borderRadius: '0.5rem',\n                      }}\n                    />\n                    <Legend wrapperStyle={{ fontSize: '12px' }} />\n                    <Line\n                      type=\"monotone\"\n                      dataKey=\"opened\"\n                      name=\"Bugs Opened\"\n                      stroke=\"#B72B49\"\n                      strokeWidth={2}\n                      dot={{ r: 4, fill: '#B72B49' }}\n                      activeDot={{ r: 6 }}\n                    />\n                    <Line\n                      type=\"monotone\"\n                      dataKey=\"closed\"\n                      name=\"Bugs Closed\"\n                      stroke=\"#8BEA70\"\n                      strokeWidth={2}\n                      dot={{ r: 4, fill: '#8BEA70' }}\n                      activeDot={{ r: 6 }}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </div>\n            </GlassCard>\n          </div>\n\n          <GlassCard className=\"p-4 sm:p-6\">\n            <h3 className=\"text-lg font-semibold\">Recent Test Runs</h3>\n            <p className=\"text-sm text-muted-foreground mb-4\">\n              An overview of your recent test case executions by application.\n            </p>\n            <Accordion type=\"multiple\" className=\"w-full\">\n              {testRunsByApp.map((app) => (\n                <AccordionItem value={app.appName} key={app.appName}>\n                  <AccordionTrigger className=\"hover:no-underline\">\n                    <div className=\"flex items-center gap-4\">\n                      <FolderKanban className=\"h-5 w-5 text-primary\" />\n                      <span className=\"font-semibold\">{app.appName}</span>\n                      <Badge variant=\"outline\">{app.tests.length} tests</Badge>\n                    </div>\n                  </AccordionTrigger>\n                  <AccordionContent>\n                    <Table>\n                      <TableHeader>\n                        <TableRow className=\"border-b-white/10\">\n                          <TableHead>Test ID</TableHead>\n                          <TableHead>User Story ID</TableHead>\n                          <TableHead>Status</TableHead>\n                          <TableHead>Progress</TableHead>\n                          <TableHead>Jira Link</TableHead>\n                        </TableRow>\n                      </TableHeader>\n                      <TableBody>\n                        {app.tests.map((run) => (\n                          <TableRow key={run.id} className=\"border-b-0\">\n                            <TableCell className=\"font-medium\">{run.id}</TableCell>\n                            <TableCell>{run.userStoryId}</TableCell>\n                            <TableCell>\n                              <Badge\n                                style={{\n                                  backgroundColor: run.status === 'Passed' ? '#8BEA70' : run.status === 'Failed' ? '#B72B49' : run.status === 'Pending' ? '#f97316' : undefined,\n                                  color: run.status === 'Passed' ? 'black' : 'white',\n                                }}\n                                className={cn({\n                                  'bg-secondary text-secondary-foreground hover:bg-secondary/80': run.status === 'Running'\n                                })}\n                              >\n                                {run.status}\n                              </Badge>\n                            </TableCell>\n                            <TableCell>{run.progress}%</TableCell>\n                            <TableCell>\n                              {run.jiraLink ? (\n                                <a href={run.jiraLink} target=\"_blank\" rel=\"noopener noreferrer\" className='flex items-center gap-1.5 text-blue-400 hover:text-blue-300 hover:underline'>\n                                  <LinkIcon className=\"h-4 w-4\" />\n                                  <span>Open Ticket</span>\n                                </a>\n                              ) : (\n                                <span className='text-muted-foreground'>-</span>\n                              )}\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </AccordionContent>\n                </AccordionItem>\n              ))}\n            </Accordion>\n          </GlassCard>\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}